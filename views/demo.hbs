<h1>Layout System</h1>
<h3>Spacing</h3>
<p>
  <text>Space values allows you to assign global spacing scale to any component. Props they can be assigned to are
  </text>
  <text code="true">top</text><text>, </text>
  <text code="true">bottom</text><text>, </text>
  <text code="true">left</text><text>, </text>
  <text code="true">right</text><text>, </text>
  <text code="true">margin</text><text>, </text>
  <text code="true">marginTop</text><text>, </text>
  <text code="true">marginBottom</text><text>, </text>
  <text code="true">marginLeft</text><text>, </text>
  <text code="true">marginRight</text><text>, </text>
  <text code="true">padding</text><text>, </text>
  <text code="true">paddingTop</text><text>, </text>
  <text code="true">paddingBottom</text><text>, </text>
  <text code="true">paddingLeft</text><text> and </text>
  <text code="true">paddingRight</text><text>. </text>
  <text>Here are accepted space values: </text>
</p>
<collapse>
  <collapse.handle>Values</collapse.handle>
  <block></block>
  <block intent="info" justifyContent="center" paddingLeft="0" paddingRight="0" minHeight="8" width="0">
    <text position="absolute">0</text>
  </block>
  <block intent="info" justifyContent="center" paddingLeft="0" paddingRight="0" minHeight="8" width="0.5">
    <text position="absolute">0.5</text>
  </block>
  <block intent="info" justifyContent="center" paddingLeft="0" paddingRight="0" minHeight="8" width="1">
    <text position="absolute">1</text>
  </block>
  <block intent="info" justifyContent="center" paddingLeft="0" paddingRight="0" minHeight="8" width="1.5">
    <text position="absolute">1.5</text>
  </block>
  <block intent="info" justifyContent="center" paddingLeft="0" paddingRight="0" minHeight="8" width="2">
    <text position="absolute">2</text>
  </block>
  <block intent="info" justifyContent="center" paddingLeft="0" paddingRight="0" minHeight="8" width="2.5">
    <text position="absolute">2.5</text>
  </block>
  <block intent="info" justifyContent="center" paddingLeft="0" paddingRight="0" minHeight="8" width="3">
    <text position="absolute">3</text>
  </block>
  <block intent="info" justifyContent="center" paddingLeft="0" paddingRight="0" minHeight="8" width="3.5">
    <text position="absolute">3.5</text>
  </block>
  <block intent="info" justifyContent="center" paddingLeft="0" paddingRight="0" minHeight="8" width="4">
    <text position="absolute">4</text>
  </block>
  <block intent="info" alignItems="center" width="5">5</block>
  <block intent="info" alignItems="center" width="6">6</block>
  <block intent="info" alignItems="center" width="7">7</block>
  <block intent="info" alignItems="center" width="8">8</block>
  <block intent="info" width="9">9</block>
  <block intent="info" width="10">10</block>
  <block intent="info" width="12">12</block>
  <block intent="info" width="14">14</block>
  <block intent="info" width="16">16</block>
  <block intent="info" width="20">20</block>
  <block intent="info" width="24">24</block>
  <block intent="info" width="28">28</block>
  <block intent="info" width="32">32</block>
  <block intent="info" width="36">36</block>
  <block intent="info" width="40">40</block>
  <block intent="info" width="44">44</block>
  <block intent="info" width="48">48</block>
  <block intent="info" width="52">52</block>
  <block intent="info" width="56">56</block>
  <block intent="info" width="60">60</block>
  <block intent="info" width="64">64</block>
  <block intent="info" width="72">72</block>
  <block intent="info" width="80">80</block>
  <block intent="info" width="96">96</block>
</collapse>

<h3>Sizing</h3>
<p>
  <text>Size values allows you to assign global size scale to any component. Props they can be assigned to are </text>
  <text code="true">width</text><text>, </text>
  <text code="true">minWidth</text><text>, </text>
  <text code="true">maxWidth</text><text>, </text>
  <text code="true">height</text><text>, </text>
  <text code="true">minHeight</text><text> and </text>
  <text code="true">maxHeight</text><text>. </text>
  <text>It can take any of the </text>
  <text code="true">Spacing</text>
  <text> values, also percentage and unit values below are accepted:</text>
</p>
<collapse marginBottom="0">
  <collapse.handle>Percentages</collapse.handle>
  <block></block>
  <block intent="info" width="10%">10%</block>
  <block intent="info" width="20%">20%</block>
  <block intent="info" width="30%">30%</block>
  <block intent="info" width="40%">40%</block>
  <block intent="info" width="50%">50%</block>
  <block intent="info" width="60%">60%</block>
  <block intent="info" width="70%">70%</block>
  <block intent="info" width="80%">80%</block>
  <block intent="info" width="90%">90%</block>
  <block intent="info" width="100%">100%</block>
</collapse>
<collapse marginTop="2">
  <collapse.handle>Units</collapse.handle>
  <block></block>
  <block intent="info" width="3xs">3xs</block>
  <block intent="info" width="2xs">2xs</block>
  <block intent="info" width="xs">xs</block>
  <block intent="info" width="sm">sm</block>
  <block intent="info" width="md">md</block>
  <block intent="info" width="lg">lg</block>
  <block intent="info" width="xl">xl</block>
  <block intent="info" width="2xl">2xl</block>
  <block intent="info" width="3xl">3xl</block>
  <block intent="info" width="4xl">4xl</block>
  <block intent="info" width="5xl">5xl</block>
  <block intent="info" width="6xl">6xl</block>
  <block intent="info" width="7xl">7xl</block>
  <block intent="info" width="8xl">8xl</block>
</collapse>

<h3>Flexbox</h3>
<p>
  <text>Intertext UIDL fully supports CSS Flexbox specification. For the web version, it uses the native </text>
  <text>browser implementation of flexbox, whereas on other platforms, it uses the Yoga layout engine.</text>
</p>
<p>
  <text>Every presentational component can take flexbox attributes and can be positioned with it. The allowed attributes
    are </text>
  <text code="true">alignContent</text><text>, </text>
  <text code="true">alignItems</text><text>, </text>
  <text code="true">alignSelf</text><text>, </text>
  <text code="true">flexDirection</text><text>, </text>
  <text code="true">flexWrap</text><text>, </text>
  <text code="true">flexGrow</text><text>, </text>
  <text code="true">flexShrink</text><text>, </text>
  <text code="true">flexBasis</text><text> and </text>
  <text code="true">justifyContent</text><text>.</text>
</p>
<block></block>
<text muted="true">flex-start</text>
<block intent="default" flexDirection="row" flexGrow="0" alignItems="center" justifyContent="flex-start">
  <block intent="info" margin="0" flexGrow="0" width="8" height="8"></block>
  <block intent="info" margin="0" flexGrow="0" width="8" height="8"></block>
  <block intent="info" margin="0" flexGrow="0" width="8" height="8"></block>
</block>
<text muted="true">flex-end</text>
<block intent="default" flexDirection="row" flexGrow="0" alignItems="center" justifyContent="flex-end">
  <block intent="info" margin="0" flexGrow="0" width="8" height="8"></block>
  <block intent="info" margin="0" flexGrow="0" width="8" height="8"></block>
  <block intent="info" margin="0" flexGrow="0" width="8" height="8"></block>
</block>
<text muted="true">center</text>
<block intent="default" flexDirection="row" flexGrow="0" alignItems="center" justifyContent="center">
  <block intent="info" margin="0" flexGrow="0" width="8" height="8"></block>
  <block intent="info" margin="0" flexGrow="0" width="8" height="8"></block>
  <block intent="info" margin="0" flexGrow="0" width="8" height="8"></block>
</block>
<text muted="true">space-around</text>
<block intent="default" flexDirection="row" flexGrow="0" alignItems="center" justifyContent="space-around">
  <block intent="info" margin="0" flexGrow="0" width="8" height="8"></block>
  <block intent="info" margin="0" flexGrow="0" width="8" height="8"></block>
  <block intent="info" margin="0" flexGrow="0" width="8" height="8"></block>
</block>
<text muted="true">space-between</text>
<block intent="default" flexDirection="row" flexGrow="0" alignItems="center" justifyContent="space-between">
  <block intent="info" margin="0" flexGrow="0" width="8" height="8"></block>
  <block intent="info" margin="0" flexGrow="0" width="8" height="8"></block>
  <block intent="info" margin="0" flexGrow="0" width="8" height="8"></block>
</block>
<text muted="true">grow</text>
<block intent="default" flexDirection="row" flexGrow="0" alignItems="center" justifyContent="space-between">
  <block intent="info" margin="0" flexGrow="0" width="8" height="8"></block>
  <block intent="info" margin="0" flexGrow="1" width="8" height="8"></block>
  <block intent="info" margin="0" flexGrow="0" width="8" height="8"></block>
</block>
<text muted="true">wrap</text>
<block intent="default" flexDirection="row" flexGrow="0" alignItems="center" justifyContent="flex-start"
  flexWrap="wrap">
  <block intent="info" margin="0" flexGrow="0" width="8" height="8"></block>
  <block intent="info" margin="0" flexGrow="0" width="8" height="8"></block>
  <block intent="info" margin="0" flexGrow="0" width="8" height="8"></block>
  <block intent="info" margin="0" flexGrow="0" width="8" height="8"></block>
  <block intent="info" margin="0" flexGrow="0" width="8" height="8"></block>
  <block intent="info" margin="0" flexGrow="0" width="8" height="8"></block>
  <block intent="info" margin="0" flexGrow="0" width="8" height="8"></block>
  <block intent="info" margin="0" flexGrow="0" width="8" height="8"></block>
  <block intent="info" margin="0" flexGrow="0" width="8" height="8"></block>
  <block intent="info" margin="0" flexGrow="0" width="8" height="8"></block>
  <block intent="info" margin="0" flexGrow="0" width="8" height="8"></block>
  <block intent="info" margin="0" flexGrow="0" width="8" height="8"></block>
  <block intent="info" margin="0" flexGrow="0" width="8" height="8"></block>
  <block intent="info" margin="0" flexGrow="0" width="8" height="8"></block>
  <block intent="info" margin="0" flexGrow="0" width="8" height="8"></block>
  <block intent="info" margin="0" flexGrow="0" width="8" height="8"></block>
  <block intent="info" margin="0" flexGrow="0" width="8" height="8"></block>
  <block intent="info" margin="0" flexGrow="0" width="8" height="8"></block>
  <block intent="info" margin="0" flexGrow="0" width="8" height="8"></block>
  <block intent="info" margin="0" flexGrow="0" width="8" height="8"></block>
  <block intent="info" margin="0" flexGrow="0" width="8" height="8"></block>
  <block intent="info" margin="0" flexGrow="0" width="8" height="8"></block>
  <block intent="info" margin="0" flexGrow="0" width="8" height="8"></block>
  <block intent="info" margin="0" flexGrow="0" width="8" height="8"></block>
  <block intent="info" margin="0" flexGrow="0" width="8" height="8"></block>
</block>

<h3>Absolute positioning</h3>
<p>
  <text>The layout system supports absolute positioning; the values </text>
  <text code="true">position</text><text>, and </text>
  <text code="true">top</text><text>, </text>
  <text code="true">bottom</text><text>, </text>
  <text code="true">left</text><text>, </text>
  <text code="true">right</text><text>, </text>
  <text>can be used with all values unit values </text>
</p>
<block intent="default" height="24" alignItems="center" justifyContent="center" marginTop="8">
  <text muted="true">Relative container</text>
  <block intent="info" position="absolute" margin="0" top="-3" right="-3">
    <text intent="info">top: -3, right: -3</text>
  </block>
  <block intent="info" position="absolute" margin="0" top="-3" left="-3">
    <text intent="info">top: -3, left: -3</text>
  </block>
  <block intent="info" position="absolute" margin="0" bottom="-3" right="-3">
    <text intent="info">bottom: -3, right: -3</text>
  </block>
  <block intent="info" position="absolute" margin="0" bottom="-3" left="-3">
    <text intent="info">bottom: -3, left: -3</text>
  </block>
  <block intent="info" position="absolute" margin="0" top="20%" left="20%">
    <text intent="info">top: 20%, left: 20%</text>
  </block>
</block>

<h1>Layout Components</h1>

<h3>Block</h3>
<p>
  <text>Blocks are the most basic building block of Intertext, they can be though of </text>
  <text code="true">div</text>
  <text>'s in HTML. They can be used to organize contents and apply spacing / layout. Like many </text>
  <text>presetational components, they can take an </text>
  <text code="true">intent</text>
  <text>.</text>
</p>

<block></block>
<block>
  <text>No Intent</text>
</block>
<block intent="default">
  <text intent="default">Intent: default</text>
</block>
<block intent="primary">
  <text intent="primary">Intent: primary</text>
</block>
<block intent="info">
  <text intent="info">Intent: info</text>
</block>
<block intent="success">
  <text intent="success">Intent: success</text>
</block>
<block intent="warning">
  <text intent="warning">Intent: warning</text>
</block>
<block intent="error">
  <text intent="error">Intent: error</text>
</block>

<h3>Grid</h3>
<p>Components could be displayed in a grid layout, as well as side by side using this technique. This component works
  similarly to css-grid, accepts a column template and positions its children based on it.</p>

<block><text muted="true">cols: [1, 1, 1, 1, 1]</text></block>
<grid cols="[1, 1, 1, 1, 1]" gap="2">
  <block intent="info">1</block>
  <block intent="info">1</block>
  <block intent="info">1</block>
  <block intent="info">1</block>
  <block intent="info">1</block>
  <block intent="info">1</block>
  <block intent="info">1</block>
  <block intent="info">1</block>
  <block intent="info">1</block>
  <block intent="info">1</block>
</grid>

<block marginTop="3"><text muted="true">cols: [2, 3, 1]</text></block>
<grid cols="[2, 3, 1]" gap="2">
  <block intent="info">2</block>
  <block intent="info">3</block>
  <block intent="info">1</block>
  <block intent="info">2</block>
  <block intent="info">3</block>
  <block intent="info">1</block>
</grid>

<block marginTop="3"><text muted="true">cols: [3, 1]</text></block>
<grid cols="[3, 1]" gap="2">
  <block intent="info">3</block>
  <block intent="info">1</block>
  <block intent="info">3</block>
  <block intent="info">1</block>
</grid>

<block marginTop="3"><text muted="true">cols: [1, 3]</text></block>
<grid cols="[1, 3]" gap="2">
  <block intent="info">1</block>
  <block intent="info">3</block>
  <block intent="info">1</block>
  <block intent="info">3</block>
</grid>

<h1>Typography</h1>

<grid cols="[1, 1]">
  <block>
    <p>
      <text>Lorem ipsum dolor sit amet, </text>
      <text muted="true">
        <text>consectetur </text>
        <text bold="true">adipiscing </text>
        <text>elit. Etiam eu fringilla lectus. </text>
      </text>
      <text>Pellentesque </text>
      <text bold="true" italic="true">suscipit nisi libero, ac rhoncus libero </text>
      <text>molestie quis. </text>
      <text underlined="true">Sed facilisis eros</text>
      <text>lectus, non cursus turpis faucibus ut. Phasellus tristique sapien ut lacus molestie ornare. Curabitur id
        ultrices mauris.</text>
    </p>
  </block>
  <block>
    <h1 margin="0" marginBottom="4">Heading 1</h1>
    <h2 margin="0" marginBottom="4">Heading 2</h2>
    <h3 margin="0" marginBottom="4">Heading 3</h3>
  </block>
</grid>

<h1>Components</h1>

<h3>Collapse</h3>
<p>Collapse component can be used to hide long-form content under a panel that is closed by default, and that can be
  toggled open by clicking the handle</p>
<collapse>
  <collapse.handle>
    <text>This is the handle</text>
  </collapse.handle>
  <text>This is the content</text>
</collapse>

<h3>Buttons</h3>

<p>Buttons accept onClick complex action, which can take commands</p>

<grid cols="[1, 1, 1, 1]">
  <block>
    <button marginBottom="2">default</button>
    <button marginBottom="2" disabled="true">disabled</button>
  </block>
  <block>
    <button marginBottom="2" intent="default">default</button>
    <button marginBottom="2" intent="primary">primary</button>
    <button marginBottom="2" intent="error">error</button>
    <button marginBottom="2" intent="warning">warning</button>
    <button marginBottom="2" intent="success">success</button>
    <button marginBottom="2" intent="info">info</button>
  </block>
</grid>

<h3>Input</h3>

<p>
  Inputs can be used to take textual input from the user. The `name`
  attribute must be passed to them, and their value will be handled
  automatically, and will be passed on to the server with every request
  body under `inputState`
</p>

<input name="test_var" placeholder="test"></input>

<h1>Commands</h1>

<h3>State</h3>

<p>
  While state is essentially a command, it can also be used as a component. When state command
  is provided with only a key and without a value, Intertext uses the current value of the state
  as a literal. When a value is provided, it sets the state variable to that value. State values
  can be used within an action, such as "button.onClick", or it can be used as if it was a component,
  in which case Intertext client will set the state value immediately.
</p>

<block intent="default">
  <text>Current Value: </text>
  <state key="tmp_value"></state>
</block>
<block flexDirection="row">
  <button>
    <text>On</text>
    <button.onClick>
      <state key="tmp_value">On</state>
    </button.onClick>
  </button>
  <button marginLeft="2">
    <text>Off</text>
    <button.onClick>
      <state key="tmp_value">Off</state>
    </button.onClick>
  </button>
</block>

<h3>Alert</h3>

<p>
  <text code="true">alert</text>
  <text> command can be used to display a message to the user</text>
</p>

<block>
  <button>
    <text>Example Alert</text>
    <button.onClick>
      <alert>Hello, world</alert>
    </button.onClick>
  </button>
</block>